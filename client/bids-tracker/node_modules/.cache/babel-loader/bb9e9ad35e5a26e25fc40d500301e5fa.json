{"ast":null,"code":"var _jsxFileName = \"/Users/parikshitsharma/Documents/try/client/bids-tracker/src/pages/Bids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert'; // import { withAlert } from 'react-alert'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = process.env.REACT_APP_API_URL;\n\nfunction Bids() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [show2, setShow2] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [bids, setBids] = useState(\"\");\n  const [winnerBids, setWinnerBids] = useState(\"\");\n  const [addBids, setAddBids] = useState(\"\");\n  const [Amount, setAmount] = useState(\"\");\n  const [Uid, setUid] = useState(\"\");\n  const [Itemid, setItemId] = useState(\"\");\n  const [winnerItemid, setWinnerItemId] = useState(\"\");\n\n  const getWinner = async () => {\n    try {\n      var response1 = await axios.get(`${URL}/winner/${winnerItemid}`);\n      console.log(\"add response1121 : \", response1.data);\n\n      if (response1.status === 200) {\n        setWinnerBids(response1);\n        console.log(response1); // setBids(response.data)\n        // await getBids()\n\n        console.log(\"Bid submiited succesfully\", winnerBids.data);\n        alert(winnerBids.data);\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this); // console.log(\"bids : \",bids)\n      } else {\n        console.log(\"hello1\");\n      } // console.log(\"response : \",response)\n      // console.log(\"response.data  : \",response.data)\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const AddBids = async () => {\n    console.log(\"hello\");\n\n    try {\n      var response1 = await axios.post(`${URL}/bids/${Uid}/${Itemid}/${Amount}`);\n      console.log(\"add response : \", response1);\n\n      if (response1.status === 200) {\n        // setBids(response.data)\n        // await getBids()\n        console.log(\"Bid submiited succesfully\"); // console.log(\"bids : \",bids)\n      } else {\n        console.log(\"hello1\");\n      } // console.log(\"response : \",response)\n      // console.log(\"response.data  : \",response.data)\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getAmount = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"me-3\",\n        for: \"username me-3\",\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-1 w-100 rounded-3\",\n        type: \"text\",\n        placeholder: \"Amount\",\n        id: \"username\",\n        value: Amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getitemid = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"me-3\",\n        for: \"username me-3\",\n        children: \"itemid:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-1 w-100 rounded-3\",\n        type: \"text\",\n        placeholder: \"ItemId\",\n        id: \"username\",\n        value: Itemid,\n        onChange: e => setItemId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getWinneritemid = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"me-3\",\n        for: \"username me-3\",\n        children: \"itemid:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-1 w-100 rounded-3\",\n        type: \"text\",\n        placeholder: \"ItemId\",\n        id: \"username\",\n        value: winnerItemid,\n        onChange: e => setWinnerItemId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getUid = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"me-3\",\n        for: \"username me-3\",\n        children: \"Uid:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-1 w-100 rounded-3\",\n        type: \"text\",\n        placeholder: \"Amount\",\n        id: \"username\",\n        value: Uid,\n        onChange: e => setUid(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getBids = async () => {\n    try {\n      var response = await axios.get(`${URL}/bids`);\n\n      if (response.status === 200) {\n        setBids(response.data);\n        console.log(\"bids : \", bids);\n      } else {\n        console.log(\"hello\");\n      }\n\n      console.log(\"response : \", response);\n      console.log(\"response.data  : \", response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"URL : \", URL);\n    getBids(); // AddBids()\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#3399ff'\n      },\n      children: [bids && bids.map((bid, index) => {\n        console.log(\"bid2 : \", bid);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"item \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"Bid By : \", bid.userid]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"ItemId: \", bid.itemid]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 9\n                }, this), \"Amount: \", bid.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 5\n              }, this), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Add Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [getAmount(), getUid(), getitemid(), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => AddBids(),\n              children: \"Submit bid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this), \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShow,\n          children: \"Check winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [\"Woohoo, you're reading this text in a modal!\", getWinneritemid()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => getWinner(),\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Bids, \"i/lVaOzYiMEhgBCP22HN0WJF68E=\");\n\n_c = Bids;\nexport default Bids;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bids\");","map":{"version":3,"sources":["/Users/parikshitsharma/Documents/try/client/bids-tracker/src/pages/Bids.js"],"names":["React","useEffect","useState","axios","Button","Card","Modal","Alert","URL","process","env","REACT_APP_API_URL","Bids","show","setShow","show2","setShow2","handleClose","handleShow","bids","setBids","winnerBids","setWinnerBids","addBids","setAddBids","Amount","setAmount","Uid","setUid","Itemid","setItemId","winnerItemid","setWinnerItemId","getWinner","response1","get","console","log","data","status","alert","error","AddBids","post","getAmount","e","target","value","getitemid","getWinneritemid","getUid","getBids","response","backgroundColor","map","bid","index","padding","width","fontWeight","userid","itemid","amount","paddingTop"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react';\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\n// import { withAlert } from 'react-alert'\n\n\nconst URL = process.env.REACT_APP_API_URL\n\n\nfunction Bids() {\n    const [show, setShow] = useState(false);\n    const [show2, setShow2] = useState(true);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n    const [bids,setBids] =useState(\"\")\n    const [winnerBids,setWinnerBids] =useState(\"\")\n    const [addBids,setAddBids] =useState(\"\")\n    const [Amount,setAmount] =useState(\"\")\n    const [Uid,setUid] =useState(\"\")\n    const [Itemid,setItemId] =useState(\"\")\n    const [winnerItemid,setWinnerItemId] =useState(\"\")\n\n    const getWinner = async ()=>{\n\n        try {\n                \n            var response1 = await axios.get(`${URL}/winner/${winnerItemid}`)\n            console.log(\"add response1121 : \",response1.data)\n            if(response1.status === 200){\n                setWinnerBids(response1)\n                console.log(response1)\n                // setBids(response.data)\n                // await getBids()\n                console.log(\"Bid submiited succesfully\",winnerBids.data)\n                alert(winnerBids.data)\n                return(\n                    <div>\n                        \n                    </div>\n                )\n                \n                // console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello1\")\n            }\n            // console.log(\"response : \",response)\n            // console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n        \n\n    }\n    \n    const AddBids = async ()=>{\n        console.log(\"hello\")\n        try {\n                \n            var response1 = await axios.post(`${URL}/bids/${Uid}/${Itemid}/${Amount}`)\n            console.log(\"add response : \",response1)\n            if(response1.status === 200){\n                // setBids(response.data)\n                // await getBids()\n                console.log(\"Bid submiited succesfully\")\n                \n                \n                // console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello1\")\n            }\n            // console.log(\"response : \",response)\n            // console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n        \n    \n    \n    }\n    const getAmount = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              Amount:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              id=\"username\"\n              value={Amount}\n              onChange={(e) => setAmount(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getitemid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              itemid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"ItemId\"\n              id=\"username\"\n              value={Itemid}\n              onChange={(e) => setItemId(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getWinneritemid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              itemid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"ItemId\"\n              id=\"username\"\n              value={winnerItemid}\n              onChange={(e) => setWinnerItemId(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getUid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              Uid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              id=\"username\"\n              value={Uid}\n              onChange={(e) => setUid(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n\n\n\n    const getBids = async ()=>{\n        try {\n                \n            var response = await axios.get(`${URL}/bids`)\n            if(response.status === 200){\n                setBids(response.data)\n                console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello\")\n            }\n            console.log(\"response : \",response)\n            console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n    \n    \n    }\n    useEffect(() => {\n        console.log(\"URL : \",URL)\n        \n        getBids();\n        // AddBids()\n        \n    }, [])\n    return (\n        <center>\n        <div style={{backgroundColor:'#3399ff'}}>\n            \n            {bids && bids.map((bid,index)=>{\n                console.log(\"bid2 : \",bid)\n                return(\n                    \n                    <div key={index} style={{padding:10}}>\n                        <Card style={{ width: '18rem' }}>\n  {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n  <Card.Body>\n    <Card.Title>item {index+1}</Card.Title>\n    <Card.Text>\n        <p style={{fontWeight:'bold'}}>\n        Bid By : {bid.userid}\n        </p>\n        <p>\n           ItemId: {bid.itemid}\n        </p>\n    Amount: {bid.amount}\n    </Card.Text> \n    {/* <Button variant=\"primary\">Bid</Button> */}\n  </Card.Body>\n</Card>\n                        \n                        {/* {bid.userid} */}\n\n                       \n                    </div>\n                    \n                )\n            })}\n             <Card style={{ width: '18rem' }}>\n  {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                            <Card.Body>\n                                <Card.Title>Add Bid</Card.Title>\n                                <Card.Text>\n                                {getAmount()}\n                                {getUid()}\n                                {getitemid()}\n                                <Button onClick={() => AddBids()}>Submit bid</Button>\n                                   \n                                </Card.Text> \n                                {/* <Button variant=\"primary\">Bid</Button> */}\n                            </Card.Body>\n                            </Card>\n            <div style={{paddingTop:10}}>\n\n            <Button variant=\"primary\" onClick={handleShow} >\n        Check winner\n      </Button>\n            </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!\n            {getWinneritemid()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={()=> getWinner()}>\n            Show\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            \n        </div>\n        </center>\n    )\n}\n\nexport default Bids\n"]},"metadata":{},"sourceType":"module"}