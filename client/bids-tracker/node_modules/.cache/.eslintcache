[{"/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/index.js":"1","/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/App.js":"2","/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/reportWebVitals.js":"3","/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/pages/Bids.js":"4"},{"size":500,"mtime":1635698869536,"results":"5","hashOfConfig":"6"},{"size":167,"mtime":1635703403814,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1635698869537,"results":"8","hashOfConfig":"6"},{"size":7887,"mtime":1635708782216,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z9ca8c",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/index.js",[],"/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/App.js",[],"/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/reportWebVitals.js",[],"/Users/parikshitsharma/Documents/try/task_bid/client/bids-tracker/src/pages/Bids.js",["19","20","21","22","23","24"],"import React, {useEffect,useState} from 'react';\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\n// import { withAlert } from 'react-alert'\n\n\nconst URL = process.env.REACT_APP_API_URL\n\n\nfunction Bids() {\n    const [show, setShow] = useState(false);\n    const [show2, setShow2] = useState(true);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n    const [bids,setBids] =useState(\"\")\n    const [winnerBids,setWinnerBids] =useState(\"\")\n    const [addBids,setAddBids] =useState(\"\")\n    const [Amount,setAmount] =useState(\"\")\n    const [Uid,setUid] =useState(\"\")\n    const [Itemid,setItemId] =useState(\"\")\n    const [winnerItemid,setWinnerItemId] =useState(\"\")\n\n    const getWinner = async ()=>{\n\n        try {\n                \n            var response1 = await axios.get(`${URL}/winner/${winnerItemid}`)\n            console.log(\"add response1121 : \",response1.data)\n            if(response1.status === 200){\n                setWinnerBids(response1)\n                console.log(response1)\n                // setBids(response.data)\n                // await getBids()\n                console.log(\"Bid submiited succesfully\",winnerBids.data)\n                alert(winnerBids.data)\n                return(\n                    <div>\n                        \n                    </div>\n                )\n                \n                // console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello1\")\n            }\n            // console.log(\"response : \",response)\n            // console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n        \n\n    }\n    \n    const AddBids = async ()=>{\n        console.log(\"hello\")\n        try {\n                \n            var response1 = await axios.post(`${URL}/bids/${Uid}/${Itemid}/${Amount}`)\n            console.log(\"add response : \",response1)\n            if(response1.status === 200){\n                // setBids(response.data)\n                // await getBids()\n                console.log(\"Bid submiited succesfully\")\n                \n                \n                // console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello1\")\n            }\n            // console.log(\"response : \",response)\n            // console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n        \n    \n    \n    }\n    const getAmount = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              Amount:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              id=\"username\"\n              value={Amount}\n              onChange={(e) => setAmount(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getitemid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              itemid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"ItemId\"\n              id=\"username\"\n              value={Itemid}\n              onChange={(e) => setItemId(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getWinneritemid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              itemid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"ItemId\"\n              id=\"username\"\n              value={winnerItemid}\n              onChange={(e) => setWinnerItemId(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n    const getUid = ()=>{\n        return(\n            <div className=\"d-flex mb-3 align-items-center\">\n            <label className=\"me-3\" for=\"username me-3\">\n              Uid:\n            </label>\n            <input\n              className=\"p-1 w-100 rounded-3\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              id=\"username\"\n              value={Uid}\n              onChange={(e) => setUid(e.target.value)}\n              required\n            />\n          </div>\n        )\n    }\n\n\n\n    const getBids = async ()=>{\n        try {\n                \n            var response = await axios.get(`${URL}/bids`)\n            if(response.status === 200){\n                setBids(response.data)\n                console.log(\"bids : \",bids)\n                \n    \n            }\n            else{\n                console.log(\"hello\")\n            }\n            console.log(\"response : \",response)\n            console.log(\"response.data  : \",response.data)\n    \n        } catch (error) {\n            console.log(error)\n            \n        }\n    \n    \n    }\n    useEffect(() => {\n        console.log(\"URL : \",URL)\n        \n        getBids();\n        // AddBids()\n        \n    }, [])\n    return (\n        <center>\n            <h1>Bid Tracker</h1>\n        <div style={{backgroundColor:'#330e00'}}>\n            \n            {bids && bids.map((bid,index)=>{\n                console.log(\"bid2 : \",bid)\n                return(\n                    \n                    <div key={index} style={{padding:10}}>\n                        <Card style={{ width: '18rem' }}>\n  {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n  <Card.Body>\n    <Card.Title>item {index+1}</Card.Title>\n    <Card.Text>\n        <p style={{fontWeight:'bold'}}>\n        Bid By : {bid.userid}\n        </p>\n        <p>\n           ItemId: {bid.itemid}\n        </p>\n    Amount: {bid.amount}\n    </Card.Text> \n    {/* <Button variant=\"primary\">Bid</Button> */}\n  </Card.Body>\n</Card>\n                        \n                        {/* {bid.userid} */}\n\n                       \n                    </div>\n                    \n                )\n            })}\n             <Card style={{ width: '18rem' }}>\n  {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                            <Card.Body>\n                                <Card.Title>Add Bid</Card.Title>\n                                <Card.Text>\n                                {getAmount()}\n                                {getUid()}\n                                {getitemid()}\n                                <Button onClick={() => AddBids()}>Submit bid</Button>\n                                   \n                                </Card.Text> \n                                {/* <Button variant=\"primary\">Bid</Button> */}\n                            </Card.Body>\n                            </Card>\n            <div style={{paddingTop:10}}>\n\n            <Button variant=\"primary\" onClick={handleShow} >\n        Check winner\n      </Button>\n            </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!\n            {getWinneritemid()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={()=> getWinner()}>\n            Show\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            \n        </div>\n        </center>\n    )\n}\n\nexport default Bids\n",{"ruleId":"25","severity":1,"message":"26","line":6,"column":8,"nodeType":"27","messageId":"28","endLine":6,"endColumn":13},{"ruleId":"25","severity":1,"message":"29","line":15,"column":12,"nodeType":"27","messageId":"28","endLine":15,"endColumn":17},{"ruleId":"25","severity":1,"message":"30","line":15,"column":19,"nodeType":"27","messageId":"28","endLine":15,"endColumn":27},{"ruleId":"25","severity":1,"message":"31","line":22,"column":12,"nodeType":"27","messageId":"28","endLine":22,"endColumn":19},{"ruleId":"25","severity":1,"message":"32","line":22,"column":20,"nodeType":"27","messageId":"28","endLine":22,"endColumn":30},{"ruleId":"33","severity":1,"message":"34","line":199,"column":8,"nodeType":"35","endLine":199,"endColumn":10,"suggestions":"36"},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'show2' is assigned a value but never used.","'setShow2' is assigned a value but never used.","'addBids' is assigned a value but never used.","'setAddBids' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBids'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [getBids]",{"range":"40","text":"41"},[5444,5446],"[getBids]"]